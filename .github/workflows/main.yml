name: CI

on: [push]

jobs:
  sast_scan:
    name: Run Bandit scan
    runs-on: Ubuntu-latest
    
#Above chooses what system to run on
#Below checkouts the code into above system

    steps:
    - name: Checkout code
      uses: actions/checkout@v2
      
#Installs python as needed for specific code that was checked out

    - name: Set up Python
      uses: actions/setup-python@v2
      with: 
        python-version: 3.8
        
#Python package installation using CLI

    - name: Install Bandit
      run: pip install bandit
      
#Run bandit and scan all python files - specific confidence / severity can be filtered as per the -ll and -ii from the website

    - name: Run Bandit Scan CLI
      run: bandit -ll -ii -r . -f json -o bandit-report.json
      
#If always means it will always run the below step even if a previous fails to prevent skipping. 
#Upload Artifact uploads the findings outside of the test env before its destroyed

    - name: Upload Artifact
      uses: actions/upload-artifact@v4
      if: always()
      with:
        name: Bandit-findings
        path: bandit-report.json
#This json file can then be uploaded and viewed as a UI

  image_scan:
    name: Build Image and Run Image Scan
    runs-on: Ubuntu-latest
#Above chooses what system to run on
#Below checkouts the code into above system
    steps:
    - name: Checkout code
      uses: actions/checkout@v2
#Installs Docker CE
    - name: Set up Docker
      uses: docker/setup-docker-action@v4.3.0
#Builds docker image
    - name: Build Docker Image
      run: docker build -f Dockerfile -t myapp:latest .
#Scanning image for vulnerability 
    -name: Docker Scout Scan
      run: |
        curl -fsSL https://raw.githubusercontent.com/docker/scout-cli/main/install.sh -o install-scout.sh
        sh install-scout.sh
        docker scout quickview
        docker scout cves
        
        
      
      
      
